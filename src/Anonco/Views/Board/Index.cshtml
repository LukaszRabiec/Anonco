@using Anonco.Shared
@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@model PagedList.IPagedList<Anonco.Database.Entities.Announcement>
@{
    ViewBag.Title = "Announcements";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>@ViewBag.Title</h3>
        @if (TempData[AppStrings.TempMessage] != null)
        {
            <div class="alert alert-info" role="alert">
                @Html.Raw(TempData[AppStrings.TempMessage])
            </div>
        }
    </div>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>@Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UserSort })</th>
                <th>@Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSort })</th>
                <th>@Html.ActionLink("Addition date", "Index", new { sortOrder = ViewBag.DateSort })</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 1; }
            @foreach(var announcement in Model)
            {
                <tr>
                    <td>@i</td>
                    <td>@announcement.User.UserName</td>
                    <td>@announcement.Title</td>
                    <td>@announcement.AdditionDate.Date.ToShortDateString()</td>
                    <td>
                        @Html.ActionLink(" ", "Details", new { id = announcement.Id }, new { @class = "btn btn-info btn-xs glyphicon glyphicon-search" })
                        @if (User.Identity.IsAuthenticated
                            && (User.IsInRole(AppStrings.AdminRoleName)
                                || User.IsInRole(AppStrings.ModRoleName)
                                || announcement.User.Id == User.Identity.GetUserId()))
                        {
                            @Html.ActionLink(" ", "Edit", new { id = announcement.Id }, new { @class = "btn btn-primary btn-xs glyphicon glyphicon-pencil" })
                        }
                        @if (User.Identity.IsAuthenticated
                            && (User.IsInRole(AppStrings.AdminRoleName)
                                || announcement.User.Id == User.Identity.GetUserId()))
                        {
                            @Html.ActionLink(" ", "Delete", new { id = announcement.Id }, new { @class = "btn btn-danger btn-xs glyphicon glyphicon-trash" })
                        }
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
    <div class="panel-footer" id="footer-pagination">
        @if (User.Identity.IsAuthenticated)
        {
            @Html.ActionLink("Add announcement", "Create", null, new { @class = "btn btn-success" })
        }
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort }))
    </div>
</div>